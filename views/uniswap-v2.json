{
    "_id": "_design/uniswap-v2",
    "views": {
        "swap-token-from": {
            "reduce": "function (keys, values, rereduce) {\n    if (rereduce) {\n        return values.reduce((a, b) => {\n            return {\n                amount: parseFloat(a.amount) + parseFloat(b.amount),\n                count: a.count + b.count\n            };\n        });\n    } else {\n        // BigInt is not supported by CouchDB 3.2.0, so use float\n        let s = 0;\n        values.forEach(v => {\n            s += parseFloat(v.amount);\n        });\n        return { amount: s, count: values.length };\n    }\n}",
            "map": "function (doc) {\n    if (doc.docType === 'transaction' && doc.block_timestamp && doc.to_address === '0x7a250d5630b4cf539739df2c5dacb4c659f2488d' &&\n        ['swapExactTokensForTokens', 'swapExactTokensForETH', 'swapExactTokensForETHSupportingFeeOnTransferTokens', 'swapExactETHForTokens', 'swapETHForExactTokens'].includes(doc.input.method)) {\n        const d = new Date(doc.block_timestamp);\n        const param = doc.input.params;\n        let p = param.path;\n        let key = [p[0], d.getUTCFullYear(), d.getUTCMonth() + 1, d.getUTCDate(), d.getUTCHours(), d.getUTCMinutes()];\n        emit(key, { to: p[p.length - 1], amount: param.amountIn ? param.amountIn : doc.value });\n    }\n}"
        },
        "swap-token-to": {
            "reduce": "function (keys, values, rereduce) {\n    if (rereduce) {\n        return values.reduce((a, b) => {\n            return {\n                amount: parseFloat(a.amount) + parseFloat(b.amount),\n                count: a.count + b.count\n            };\n        });\n    } else {\n        // BigInt is not supported by CouchDB 3.2.0, so use float\n        let s = 0;\n        values.forEach(v => {\n            s += parseFloat(v.amount);\n        });\n        return { amount: s, count: values.length };\n    }\n}",
            "map": "function (doc) {\n    if (doc.docType === 'transaction' && doc.block_timestamp && doc.to_address === '0x7a250d5630b4cf539739df2c5dacb4c659f2488d' &&\n        ['swapExactTokensForTokens', 'swapExactTokensForETH', 'swapExactTokensForETHSupportingFeeOnTransferTokens', 'swapExactETHForTokens', 'swapETHForExactTokens'].includes(doc.input.method)) {\n        const d = new Date(doc.block_timestamp);\n        const param = doc.input.params;\n        let p = param.path;\n        let key = [p[p.length - 1], d.getUTCFullYear(), d.getUTCMonth() + 1, d.getUTCDate(), d.getUTCHours(), d.getUTCMinutes()];\n        emit(key, { from: p[0], amount: param.amountOutMin ? param.amountOutMin : param.amountOut });\n    }\n}"
        },
        "eth-to-token": {
            "reduce": "function (keys, values, rereduce) {\n    if (rereduce) {\n        return values.reduce((a, b) => {\n            return {\n                eth: parseFloat(a.eth) + parseFloat(b.eth),\n                amount: parseFloat(a.amount) + parseFloat(b.amount),\n                count: a.count + b.count\n            };\n        });\n    } else {\n        // BigInt is not supported by CouchDB 3.2.0, so use float\n        let amt = 0, eth = 0;\n        values.forEach(v => {\n            amt += parseFloat(v.amount);\n            eth += parseFloat(v.eth);\n        });\n        return { eth: eth, amount: amt, count: values.length };\n    }\n}",
            "map": "function (doc) {\n    if (doc.docType === 'transaction' && doc.block_timestamp && doc.to_address === '0x7a250d5630b4cf539739df2c5dacb4c659f2488d' &&\n        (doc.input.method === 'swapExactETHForTokens' || doc.input.method === 'swapETHForExactTokens')) {\n        const d = new Date(doc.block_timestamp);\n        const param = doc.input.params;\n        let p = param.path;\n        let key = [p[0], p[p.length - 1], d.getUTCFullYear(), d.getUTCMonth() + 1, d.getUTCDate(), d.getUTCHours(), d.getUTCMinutes()];\n        emit(key, { eth: doc.value, amount: param.amountOutMin ? param.amountOutMin : param.amountOut });\n    }\n}"
        },
        "token-to-eth": {
            "reduce": "function (keys, values, rereduce) {\n    if (rereduce) {\n        return values.reduce((a, b) => {\n            return {\n                eth: parseFloat(a.eth) + parseFloat(b.eth),\n                amount: parseFloat(a.amount) + parseFloat(b.amount),\n                count: a.count + b.count\n            };\n        });\n    } else {\n        // BigInt is not supported by CouchDB 3.2.0, so use float\n        let amt = 0, eth = 0;\n        values.forEach(v => {\n            amt += parseFloat(v.amount);\n            eth += parseFloat(v.eth);\n        });\n        return { eth: eth, amount: amt, count: values.length };\n    }\n}",
            "map": "function (doc) {\n    if (doc.docType === 'transaction' && doc.block_timestamp && doc.to_address === '0x7a250d5630b4cf539739df2c5dacb4c659f2488d' &&\n        (doc.input.method === 'swapExactTokensForETH' || doc.input.method === 'swapExactTokensForETHSupportingFeeOnTransferTokens')) {\n        const d = new Date(doc.block_timestamp);\n        const param = doc.input.params;\n        let p = param.path;\n        let key = [p[p.length - 1], p[0], d.getUTCFullYear(), d.getUTCMonth() + 1, d.getUTCDate(), d.getUTCHours(), d.getUTCMinutes()];\n        emit(key, { eth: param.amountOutMin, amount: param.amountIn });\n    }\n}"
        }
    },
    "language": "javascript"
}